# pre-commit stop running hooks after the first failure.
fail_fast: true
# A list of repository mappings
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      # Remove spaces at end of lines except markdown
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      # Make the last line of the file a newline code
      - id: end-of-file-fixer
      # Unify line break code to LF
      - id: mixed-line-ending
        args: [--fix=lf]
      # toml syntax check
      - id: check-toml
      # yaml syntax check
      - id: check-yaml

  # https://github.com/pryorda/dockerfilelint-precommit-hooks#usage
  - repo: https://github.com/pryorda/dockerfilelint-precommit-hooks
    rev: v0.1.0
    hooks:
      - id: dockerfilelint
        stages: [commit]

  # https://github.com/IamTheFij/docker-pre-commit#installation
  - repo: https://github.com/iamthefij/docker-pre-commit
    rev: v3.0.1
    hooks:
      - id: docker-compose-check

  # https://python-poetry.org/docs/pre-commit-hooks/#usage
  - repo: https://github.com/python-poetry/poetry
    rev: 1.8.0
    hooks:
      - id: poetry-check
        verbose: true
      - id: poetry-lock
        verbose: true
      - id: poetry-export
        args: ["-f", "requirements.txt", "-o", "requirements.txt"]
        verbose: true
        files: ^pyproject\.toml$
      - id: poetry-export
        args: ["--with", "dev", "-f", "requirements.txt", "-o", "requirements-dev.txt"]
        verbose: true
        files: ^pyproject\.toml$

  # Reference: https://github.com/DavidAnson/markdownlint-cli2#overview
  # > markdownlint-cli is a traditional command-line interface for markdownlint.
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.42.0
    hooks:
      - id: markdownlint
        args: ["--config", ".markdownlint.jsonc", "README.md"]

  # Repository local hooks
  - repo: local
    hooks:
    #-   id: isort
    #    name: isort
    #    stages: [commit]
    #    language: system
    #    entry: poetry run isort app tests
    #    types: [python]

    -   id: black
        name: black
        stages: [commit]
        language: system
        entry: poetry run black app tests ci sample
        types: [python]
        exclude: resources_bin.py

    #-   id: flake8
    #    name: flake8
    #    stages: [commit]
    #    language: system
    #    entry: poetry run flake8 app tests
    #    types: [python]

    -   id: ruff
        name: ruff
        stages: [commit]
        language: system
        entry: poetry run ruff app tests ci sample --fix
        types: [python]

    -   id: mypy
        name: mypy
        stages: [commit]
        language: system
        entry: poetry run mypy
        types: [python]

    # Original script
    #- id: update-pyproject
    #  name: Update pyproject.toml version
    #  entry: poetry run python ci/update_pyproject_version.py
    #  language: system
    #  pass_filenames: false
    #  stages: [commit]
    #  additional_dependencies: []
